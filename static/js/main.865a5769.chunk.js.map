{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","theme","href","title","themeName","activeColorBox","onClick","toggleTheme","toggleBtn","iconChange","TextForm","myTextArea","document","getElementById","useState","text","setText","copy","setCopy","heading","placeholder","textAreatheme","value","onChange","event","target","id","rows","disabled","length","click","showAlert","toUpperCase","toLowerCase","navigator","clipboard","writeText","setTimeout","newTxt","split","join","filter","element","type","defaultProps","Alert","alert","role","message","App","settheme","visiblity","setVisibility","themeIcon","setThemeIcon","accordianTheme","setaccordianTheme","settextAreatheme","alertMsg","setAlertMsg","themeNumber","setThemeNumber","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.865a5769.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar flex bg-black navbar-dark bg-dark ${props.theme}`}>\r\n        <div className=\"container-fluid mx-3\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <div className=\"right-side flex\">\r\n            <div className={`right-side-theme-box ${props.themeName} ${props.activeColorBox}`} onClick={props.toggleTheme} ></div>\r\n            <button onClick={props.toggleBtn} className=\"btn theme-button\">\r\n              <i className={`bi bi-${props.iconChange}-fill`}></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n};\r\n\r\n","\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n    let myTextArea = document.getElementById(\"myTextArea\");\r\n    const [text, setText] = useState(\"\");\r\n    const [copy, setCopy] = useState(\"Copy\");\r\n\r\n    const preview = () => {\r\n        document.getElementById(\"accordianPrev\").click();\r\n        props.showAlert(\"Preview is Visible just Scroll Down\",\"success\")\r\n    }\r\n    const upperCase = () => {\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n    }\r\n    const lowerCase = () => {\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Converted to LowerCase\",\"success\")\r\n    }\r\n    const clearTxt = () => {\r\n        setText(\"\");\r\n        props.showAlert(\"The Screen is Clear Now\",\"danger\")\r\n    }\r\n\r\n    const handleonChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const copyTxt = () => {\r\n        navigator.clipboard.writeText(myTextArea.value);\r\n        setCopy(\"Copied\")\r\n        props.showAlert(\"Text Copied\",\"success\")\r\n        setTimeout(() => {\r\n            setCopy(\"Copy\")\r\n        }, 1000);\r\n    }\r\n\r\n    const removeSpace = () => {\r\n        let newTxt = text.split(/[ ]+/);\r\n        setText(newTxt.join(\" \"));\r\n        props.showAlert(\"All Extra Spaces Removed\",\"success\");\r\n      }\r\n    return (\r\n        <>\r\n            <div className=\"mb-3 container\">\r\n                <h3>{props.heading}</h3>\r\n                <textarea placeholder=\"Enter text here...\" className={`${props.textAreatheme} form-control`} value={text} onChange={handleonChange} id=\"myTextArea\" rows=\"8\"></textarea>\r\n\r\n                <div className=\"button-box\">\r\n                    <button disabled={text.length===0} className={`button1 button btn`} onClick={preview}>Preview</button>\r\n                    <button disabled={text.length===0} className={`button2 button btn`} onClick={upperCase}>UpperCase</button>\r\n                    <button disabled={text.length===0} className={`button3 button btn`} onClick={lowerCase}>LowerCase</button>\r\n                    <button disabled={text.length===0} className={`button4 button btn`} onClick={clearTxt}>Clear</button>\r\n                    <button disabled={text.length===0} className={`button5 button btn`} onClick={copyTxt}>{copy}</button>\r\n                    <button disabled={text.length===0} className={`button6 button btn`} onClick={removeSpace}>SpaceRemove</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h3>Your Text Summery</h3>\r\n                <p> {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length } Words {text.length} Character</p>\r\n                <p> {0.008 * text.split(\" \").length} minutes takes to read</p>\r\n                <div className={`${props.theme}`} id=\"accordionExample\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button id=\"accordianPrev\" className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Preview\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">{text}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string.isRequired,\r\n}\r\nTextForm.defaultProps = {\r\n    heading: \"Heading\",\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <>\r\n            <div>\r\n                {props.alert && <div className={`alert alert-success d-flex align-items-center`} role=\"alert\">\r\n                    <div>\r\n                        {props.alert.message}\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport './style.css';\nimport React, { useState } from 'react'\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n\n\nfunction App() {\n  const [theme, settheme] = useState('light-theme');\n  const [visiblity, setVisibility] = useState('hidden');\n  const [themeIcon, setThemeIcon] = useState('moon-stars');\n  const [accordianTheme, setaccordianTheme] = useState('accordian');\n  const [textAreatheme, settextAreatheme] = useState('light');\n  const [alertMsg, setAlertMsg] = useState(null);\n  const [themeNumber, setThemeNumber] = useState(0);\n  // ================== Alert Block ====================\n  const showAlert = (message, type) => {\n    setAlertMsg({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlertMsg(null);\n    }, 1500);\n  }\n  // ==================== theme change manually by user ===============\n  const toggleTheme = () => {\n    if (themeNumber === 0) {\n      document.body.style.backgroundColor = \"rgb(3 16 45)\";\n      setThemeNumber(1);\n    }\n    if (themeNumber === 1) {\n      document.body.style.backgroundColor = \"rgb(12, 2, 49)\";\n      setThemeNumber(2);\n    }\n    if (themeNumber === 2) {\n      document.body.style.backgroundColor = \"rgb(31, 2, 34)\";      \n      setThemeNumber(3);\n    }\n    if (themeNumber === 3) {\n      document.body.style.backgroundColor = \"rgb(31, 2, 18)\";     \n      setThemeNumber(4);\n    }\n    if (themeNumber === 4) {\n      document.body.style.backgroundColor = \"rgb(29, 14, 0)\";     \n      setThemeNumber(5);\n    }\n    if (themeNumber === 5) {\n      document.body.style.backgroundColor = \"black\"; \n      setThemeNumber(0);\n    }\n  }\n\n  // =================== Theme Icon Change Section ===============\n  const toggleBtn = () => {\n    \n    if (theme === \"light-theme\") {\n      settheme('dark-theme');\n      setThemeIcon('brightness-high');\n      setVisibility('visible')\n      setaccordianTheme('accordion-dark')\n      settextAreatheme(\"textarea-dark\");\n      setThemeNumber(0);\n      showAlert(\"Dark Theme Enable\", \"success\")\n      document.body.style.backgroundColor = \"#06031f\";\n      document.body.style.color = \"white\";      \n    }\n    else {\n      settheme('light-theme');\n      setThemeIcon('moon-stars');\n      setVisibility('hidden')\n      setaccordianTheme('accordion')\n      settextAreatheme(\"light\");\n      setThemeNumber(0);\n      showAlert(\"Light Theme Enable\", \"success\")\n      document.body.style.backgroundColor = \"rgb(185, 255, 255)\";\n      document.body.style.color = \"black\";\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"S21k TextUtils\" theme={theme} iconChange={themeIcon} toggleBtn={toggleBtn} activeColorBox={visiblity} toggleTheme= {toggleTheme} />\n      <Alert alert={alertMsg} />\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading=\"Enter the Text to Analyze\" textAreatheme={textAreatheme} theme={accordianTheme} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}